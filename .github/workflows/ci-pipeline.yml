name: Java CI com Maven, Selenium e Allure Report (Com Display Gr√°fico)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Permiss√µes necess√°rias para publicar o Allure Report no GitHub Pages
    permissions:
      contents: write
      pages: write
      id-token: write

    # DEFINI√á√ÉO DO SERVI√áO DOCKER LOCALHOST
    services:
      selenium_chrome:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
        options: --health-cmd "curl -f http://localhost:4444/wd/hub/status || exit 1" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      # CHECKOUT DO C√ìDIGO
      - name: Checkout do C√≥digo
        uses: actions/checkout@v4

      # INSTALA√á√ÉO E CONFIGURA√á√ÉO DO MAVEN
      - name: üõ†Ô∏è Instalar Maven no Runner
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      # INSTALA√á√ÉO E CONFIGURA√á√ÉO DO JAVA 22
      - name: ‚òï Configurar JDK 22 e Maven (Unificado)
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven

      # CONFIGURA√á√ÉO DO SELENIUGRID
      - name: Configurar Vari√°vel Selenium URL
        run: echo "SELENIUM_HUB_URL=http://selenium_chrome:4444/wd/hub" >> $GITHUB_ENV

      # EXECU√á√ÉO DOS TESTES DA SUITE
      - name: Compilar, Executar Testes e Gerar Allure Results
        run: mvn clean test allure:report

      # GERA√á√ÉO E ARMAZENAMENTO DOS RELAT√ìRIOS DO ALLURE
      - name: üìà Gerar e Publicar Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.9
        with:
          allure_results: target/allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: üì¶ Organizar relat√≥rios
        if: success() || failure()
        run: |
          echo "üìÇ Organizando relat√≥rios para publica√ß√£o..."
          mkdir -p reports

          if [ -d "target/allure-reports" ]; then
            cp -r target/allure-reports reports/allure-report
          else
            echo "Nenhum relat√≥rio Allure encontrado"
          fi

          if [ -d "target/allure-results" ]; then
            cp -r target/allure-results reports/allure-results
          else
            echo "Nenhum resultado Allure encontrado"
          fi

          if [ -d "target/cucumber-reports" ]; then
            cp -r target/cucumber-reports reports/cucumber-reports
          else
            echo "Nenhum relat√≥rio Cucumber encontrado"
          fi

          if ls target/docs/*.pdf 1> /dev/null 2>&1; then
            cp target/docs/*.pdf reports/
          else
            echo "Nenhum PDF encontrado"
          fi

          echo "üìÅ Conte√∫do final da pasta ./reports:"
          ls -R reports || echo "Pasta vazia"

      - name: üì§ Publicar relat√≥rios como artefatos
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: reports/

      # ADICIONA LINK DO RELAT√ìRIO NO LOG
      - name: üîó Exibir URL do Relat√≥rio
        if: always()
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "Relat√≥rio Allure publicado em:"
          echo "$REPORT_URL"
          echo "::notice title=Relat√≥rio Allure Publicado::Acesse o relat√≥rio aqui: $REPORT_URL"
